version: "3.8"

services:
  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    image: nginx_image
    networks:
      - app_network
    ports:
      - "80:80"
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    working_dir: /usr/share/nginx/html
    depends_on:
      - backend
      - portainer
      - minio
    environment:
      - APP_PORT=${APP_PORT}
      - PORTAINER_PORT=9000
      - MINIO_PORT=9000
      - MINIO_CONSOLE_PORT=9001

  backend:
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: backend
    image: backend_image
    networks:
      - app_network
    ports:
      - "${APP_PORT}:8088"
    depends_on:
      - database
    environment:
      - DB_DRIVER=${DB_DRIVER}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
      - CLIENT_ORIGIN=${CLIENT_ORIGIN}
      - JWT_SECRET=${JWT_SECRET}
      - APP_PORT=${APP_PORT}
      - APP_ENV=${APP_ENV}
      - AWS_REGION=${AWS_REGION}
      - SECRET_MANAGER_KEY=${SECRET_MANAGER_KEY}
     
  database:
    build: 
      context: docker/mysql
      dockerfile: Dockerfile
    container_name: mysql
    image: mysql_image
    networks:
      - app_network
    volumes:
      - app_db_volume:/var/lib/mysql
    environment:
      - MYSQL_USER=duongdx
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    ports:
      - "${DB_PORT}:3306"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks:
      - app_network
    ports:
      - "${PORTAINER_PORT}:9000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2024-03-10T02-53-48Z
    container_name: minio
    networks:
      - app_network
    volumes:
      - minio_data:/data
    ports:
      - "9000"
      - "9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: minio server --console-address ":9001" /data

networks:
  app_network:
    name: app_network

volumes:
  app_db_volume: {}
  portainer_data: {}
  minio_data: {}
